---
# Practicalli Clojure
site_name: Practicalli ClojureScript
site_url: https://practical.li/clojurescript
site_description: Practical guide to ClojureScript programming language and Clojure REPL driven development
site_author: Practicalli
copyright: Copyright &copy 2023  Practicali <a href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a>
repo_url: https://github.com/practicalli/clojurescript/
edit_uri: https://github.com/practicalli/clojurescript/edit/main/docs/

# Deployment
# remote_name: origin
remote_branch: gh-pages # deployment branch

# Theme and styling
theme:
  name: material
  logo: assets/images/practicalli-logo.png
  favicon: assets/favicon.svg
  features:
    - announce.dismiss
    - content.action.edit
    - content.action.view
    - content.code.annotate
    - content.code.copy
    - content.tabs.link
    - navigation.footer
    - navigation.indexes # Nav sections can have files
    - navigation.instant # Avoid page reloading for internal links
    - navigation.top
    - navigation.tracking # Update URL with anchor
  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: blue
      accent: teal
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: indigo
      accent: teal
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  # Override theme
  custom_dir: overrides

extra_css:
  - assets/stylesheets/extra.css

## Additional styling
markdown_extensions:
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - attr_list
  - md_in_html # Grids
  - footnotes # footnotes and abbreviations
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.keys # keyboard keys
  - pymdownx.magiclink
  - def_list # lists
  - pymdownx.tasklist:
      custom_checkbox: true # checkboxes
  - toc:
      permalink: λ︎

## Plugins
plugins:
  # Explicitly add search plugin when defining plugins in this configuration file
  - search
  - callouts
  - glightbox # Image aligning
  - git-revision-date-localized: # Update and Creation date of each page
      # enable_creation_date: true
      fallback_to_build_date: true

  # Generate Social Cards via CI only
  # in assets/images/social
  - social:
      cards: !ENV [MKDOCS_SOCIAL_CARDS_GENERATE, true]

  # Redirect pages when moved or changed
  # - redirects:
  #     redirect_maps:
  #       repl-driven-development.md: introduction/repl-workflow.md
  #       clojure-cli/data-browsers: data-inspector/

# Footer / Social Media
extra:
  social:
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/jr0cket/
    - icon: fontawesome/brands/slack
      link: https://clojurians.slack.com/messages/practicalli
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/practical_li
    - icon: fontawesome/brands/github
      link: https://github.com/practicalli
    - icon: fontawesome/brands/docker
      link: https://hub.docker.com/u/practicalli

# Navigation
nav:
  - Introduction:
      - index.md
      - ClojureScript Overview: introduction/clojurescript.md
      - Learn ClojureScript: introduction/learn-clojurescript.md
      - REPL Workflow: introduction/repl-workflow.md
      - Reloadable Code: introduction/reloadable-code.md
      - Figwheel: introduction/figwheel.md
      - Hiccup: introduction/hiccup-style-syntax.md
      - Contributing: introduction/contributing.md
      # - Single Page Apps: overview/single-page-apps.md
      # - Compiling to JavaScript: overview/compiling-to-javascript.md
      # - ClojureScript platforms: overview/clojurescript-platforms.md
      # - Functional Programming: overview/functional-programming.md
      # - Reactive apps:
      #     - overview/reactive-apps.md
      #     - Facebook React: overview/react-facebook.md
      #     - Om and Om Next: overview/react-om-and-om-next.md
      #     - Reagent: overview/react-reagent.md
      #     - Re-frame: overview/react-re-frame.md
      #     - React Native: why-clojurescript/react-native.md

      # - Why ClojureScript:
      #     - why-clojurescript/index.md
      #     - Lightweight: why-clojurescript/lightweight.md
      #     - Google Closure: why-clojurescript/google-clojure.md
      #     - Source Maps: why-clojurescript/source-maps.md
      #     - Interoperability: why-clojurescript/interoperability.md
      #     - Why not JavaScript: why-clojurescript/why-not-javascript.md
      #     - Who uses ClojureScript: why-clojurescript/who-uses-clojurescript.md
      # - Single Page Apps: introduction/single-page-apps.md
      # - Isomorphic Apps: introduction/isomorphic-apps.md
      # - Full Stack Apps: introduction/full-stack-apps.md
      - Book Writing Tips: introduction/writing-tips.md

  - Install:
      - install/index.md
      - Browser DevTools: install/browser-devtools.md

  - Figwheel Workflow:
      - figwheel-main/index.md
      - Create Projects: figwheel-main/create-project.md
      - Project Configuration: figwheel-main/project-configuration.md
      - Run Figwheel: figwheel-main/check-configuration.md
      - Rebel Rich UI: figwheel-main/rebel.md
      - Build project: figwheel-main/build-project.md
      - Emacs Cider: figwheel-main/run-figwheel-from-cider.md
      - Run tests: figwheel-main/run-tests.md
      - Continuous Tests: figwheel-main/continuous-testing.md
      - Package project: figwheel-main/package-project.md
      - Pages deploy: figwheel-main/pages-deploy.md
  - Figwheel projects:
      - figwheel-main-projects/index.md
      - Simple project: figwheel-main-projects/simple.md
      - Reagent project: figwheel-main-projects/reagent.md

  - Web Design basics:
      - web-design-basics/index.md
      - Hiccup syntax: hiccup-style-syntax.md
      - Bulma CSS: css/bulma.md
      - Bootstrap:
          - web-design-basics/bootstrap.md
          - Container: web-design-basics/bootstrap-container.md
          - Jumbotron: web-design-basics/bootstrap-jumbotron.md
          - Bootstrap website: web-design-basics/clojurebridge-london-bootstrap-website.md

  ## Reagent Projects

  - Reagent Overview:
      - reagent/index.md
  - ClojureBridge website:
      - web-design-basics/clojurebridge-london-website/index.md
      - Create project: web-design-basics/clojurebridge-london-website/create-project.md
      - Add Bulma CSS: web-design-basics/clojurebridge-london-website/add-bluma-css.md
      - Run the project: web-design-basics/clojurebridge-london-website/run-the-project.md
      - Live reloading: web-design-basics/clojurebridge-london-website/live-reloading.md
      - Hiccup for HTML: web-design-basics/clojurebridge-london-website/hiccup-for-html.md
      - REPL workflow: web-design-basics/clojurebridge-london-website/repl-workflow.md
      - Organising the code: web-design-basics/clojurebridge-london-website/organising-the-code.md
      - Add welcome message: web-design-basics/clojurebridge-london-website/add-welcome-message.md
      - Add welcome section: web-design-basics/clojurebridge-london-website/add-welcome-section.md
      # - Responsive design: web-design-basics/clojurebridge-london-website/responsive-design.md
      - App State section: web-design-basics/clojurebridge-london-website/app-state-section.md
      - GitHub pages deploy: web-design-basics/clojurebridge-london-website/github-pages-deploy.md
      - Deploy build: web-design-basics/clojurebridge-london-website/deploy-build.md
      - Add Content namespace: web-design-basics/clojurebridge-london-website/add-content-namespace.md
      - Navigation bar: web-design-basics/clojurebridge-london-website/add-navigation.md
      - Content Suggestions: web-design-basics/clojurebridge-london-website/further-ideas.md
      # - Interacting: web-design-basics/clojurebridge-london-website/interacting/index.md

  - tic-tac-toe game:
      - reagent-projects/tic-tac-toe/index.md
      - Create Project: reagent-projects/tic-tac-toe/create-project.md
      - Add Project to Git: reagent-projects/tic-tac-toe/add-project-to-git.md
      - Start the REPL with Figwheel: reagent-projects/tic-tac-toe/start-the-repl.md
      - Test Figwheel: reagent-projects/tic-tac-toe/test-figwheel.md
      - Chrome DevTools: reagent-projects/tic-tac-toe/chrome-devtools.md
      - Cljs DevTools addon: reagent-projects/tic-tac-toe/cljs-devtools-addon.md
      - Review reagent Project: reagent-projects/tic-tac-toe/review-reagent-project.md
      - Figwheel Helper functions: reagent-projects/tic-tac-toe/figwheel-helper-functions.md
      - Interact with the REPL: reagent-projects/tic-tac-toe/interact-with-the-repl.md
      - Via the Editor: reagent-projects/tic-tac-toe/interact-with-the-repl-via-editor.md
      - Evaluate code in REPL: reagent-projects/tic-tac-toe/interact-with-the-repl-evaluate-code.MD
      # - REPL in dev console: reagent-projects/tic-tac-toe/repl-in-developer-console.md
      # - Reagent Design: reagent-projects/tic-tac-toe/reagent-design.md
      # - Defining Components: reagent-projects/tic-tac-toe/reagent-design-defining-components.md -->
      - Manage app-state: reagent-projects/tic-tac-toe/reagent-design-manage-app-state.md
      # - Reloading State: reagent-projects/tic-tac-toe/reagent-design-reloading-state.md -->
      - tictactoe-game: reagent-projects/tic-tac-toe/component-tictactoe-game.md
      - Design Game board: reagent-projects/tic-tac-toe/design-game-board.md
      - Game board: reagent-projects/tic-tac-toe/component-game-board.md
      - Hiccup style syntax: reagent-projects/tic-tac-toe/hiccup-style-syntax.md
      - Scalable Vector Graphics: reagent-projects/tic-tac-toe/svg-overview.md
      - React unique index: reagent-projects/tic-tac-toe/react-unique-index.md
      - Render Game Board: reagent-projects/tic-tac-toe/render-game-board.md
      - Update Game Board: reagent-projects/tic-tac-toe/update-game-board.md
      - Refactor into components: reagent-projects/tic-tac-toe/refactor-into-components.md
      - Empty Cell: reagent-projects/tic-tac-toe/refactor--empty-cell.md
      - Nought Cell: reagent-projects/tic-tac-toe/refactor--nought-cell.md
      - Cross Cell: reagent-projects/tic-tac-toe/refactor--cross-cell.md
      - Start new game: reagent-projects/tic-tac-toe/button--start-a-new-game.md
      - Computer moves: reagent-projects/tic-tac-toe/computer-moves.md
      - Basic move: reagent-projects/tic-tac-toe/computer-move--basic.md
      - REPL experiments: reagent-projects/tic-tac-toe/computer-move--repl-experiments.md
      - Random available cell: reagent-projects/tic-tac-toe/computer-move--random-available-cell.md
      - Detecting Victory: reagent-projects/tic-tac-toe/detecting-victory.md
      - Experiments in the REPL: reagent-projects/tic-tac-toe/detecting-victory-repl-experiments.md
      - Experiments in the REPL - Pattern matching: reagent-projects/tic-tac-toe/detecting-victory-repl-experiments-pattern-matching.md
      - Victory function: reagent-projects/tic-tac-toe/detecting-victory-function.md
